class Solution {
    public List<String> fullJustify(String[] words, int maxWidth) {
        List<String> result = new ArrayList<>();
        int index = 0;

        while (index < words.length) {
            int totalChars = words[index].length();
            int last = index + 1;

            while (last < words.length) {
                if (totalChars + 1 + words[last].length() > maxWidth) break;
                totalChars += 1 + words[last].length();
                last++;
            }

            StringBuilder builder = new StringBuilder();
            int numberOfWords = last - index;
            int numberOfGaps = numberOfWords - 1;

           
            if (last == words.length || numberOfGaps == 0) {
                for (int i = index; i < last; i++) {
                    builder.append(words[i]);
                    if (i != last - 1) builder.append(" ");
                }
              
                while (builder.length() < maxWidth) {
                    builder.append(" ");
                }
            } else {
              
                int totalSpaces = maxWidth - totalChars + numberOfGaps;
                int space = totalSpaces / numberOfGaps;
                int extra = totalSpaces % numberOfGaps;

                for (int i = index; i < last; i++) {
                    builder.append(words[i]);
                    if (i != last - 1) {
                        for (int s = 0; s < space; s++) builder.append(" ");
                        if (extra-- > 0) builder.append(" ");
                    }
                }
            }

            result.add(builder.toString());
            index = last;
        }

        return result;
    }
}
